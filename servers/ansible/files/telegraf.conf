[agent]
  interval = "2s"
  # hostname = "unset-hostname-here"
  # omit_hostname = true

# Monitoring devices
# [[inputs.ping]]
#  name_prefix = "telegraf_"

  ## List of urls to ping
#  urls = ["1.2.3.4", "1.2.3.5"]

  ## Number of pings to send per collection (ping -c <COUNT>)
#  count = 1

  ## Interval, in s, at which to ping. 0 == default (ping -i <PING_INTERVAL>)
  ## Not available in Windows.
#  ping_interval = 1.0

  ## Per-ping timeout, in s. 0 == no timeout (ping -W <TIMEOUT>)
#  timeout = 1.0

  ## Total-ping deadline, in s. 0 == no deadline (ping -w <DEADLINE>)
#  deadline = 10

  ## Interface or source address to send ping from (ping -I <INTERFACE/SRC_ADDR>)
  ## on Darwin and Freebsd only source address possible: (ping -S <SRC_ADDR>)
  # interface = ""

  ## Specify the ping executable binary, default is "ping"
  # binary = "ping"

  ## Arguments for ping command
  ## when arguments is not empty, other options (ping_interval, timeout, etc) will be ignored
  # arguments = ["-c", "3"]

#[[inputs.docker]]
# name_prefix = "telegraf_"
# endpoint = "unix:///var/run/docker.sock"

[[inputs.diskio]]
  name_prefix = "telegraf_"
  [inputs.diskio.tagdrop]
    name = ["dm*", "loop*"]

[[inputs.disk]]
  name_prefix = "telegraf_"
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "loop*"]

[[inputs.mem]]
  name_prefix = "telegraf_"

[[inputs.kernel]]
  name_prefix = "telegraf_"

[[inputs.swap]]
  name_prefix = "telegraf_"

[[inputs.system]]
  name_prefix = "telegraf_"

[[inputs.cpu]]
  name_prefix = "telegraf_"
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  core_tags = false

[[inputs.temp]]
  name_prefix = "telegraf_"

# [[inputs.smart]]
#  name_prefix = "telegraf_"
# [[inputs.nvidia_smi]]

[[inputs.exec]]
  commands = ["bash /opt/host-metric.sh"]
  timeout = "5s"
  data_format = "influx"

[[outputs.influxdb_v2]]
  # Cheating here and using docker0. Sorry anyone who is not on Linux and does not have Docker installed
  # Also if you install Docker in the VM it will break!!! As it will not route to the host
  urls = ["http://172.17.0.1:8427"]
  token = "server_token"

#[[outputs.file]]
#  files = ["stdout"]
